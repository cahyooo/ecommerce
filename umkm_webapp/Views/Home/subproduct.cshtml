@using umkm_webapp.Models;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;

<section class="breadcrumb-section pb-3 pt-3">
    <div class="container">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="home" asp-action="index">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">All Product</li>
        </ol>
    </div>
</section>

<section class="products-grid pb-4 pt-4">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-4 col-12">
                <div class="sidebar">
                    <div class="sidebar-widget">
                        <div class="widget-title">
                            <h3>Categories</h3>
                        </div>

                        <div class="widget-content widget-categories">
                            <div id="wrapper">

                                @await Component.InvokeAsync("Category")

                            </div>
                        </div>
                    </div>

                    <div class="sidebar-widget">
                        <div class="widget-title">
                            <h3>LatestProduct</h3>
                        </div>
                        <div class="widget-content widget-brands">
                            @await Component.InvokeAsync("LatestProduct")
                        </div>
                    </div>

                </div>



            </div>

            <div class="col-lg-9 col-md-8 col-12">
                <div class="row">
                    <div class="col-12">
                        <div class="products-top">
                            <div class="products-top-inner">
                                <div class="products-found">
                                    <p><span> @(ViewBag.CountProducts) </span> products found </p>
                                </div>
                                <div class="products-sort">
                                    <span>Sort By : </span>
                                    <select>
                                        <option>Default</option>
                                        <option>Price</option>
                                        <option>Recent</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">

                    @foreach (var product in ViewBag.LatestProducts)
                    {

                        Product productInfo = (Product)product;
                        Photo photo = productInfo.Photos.SingleOrDefault(ph => ph.Status && ph.Featured);
                        var photoName = photo == null ? "no-image.jpg" : photo.Name;
                        <div class="col-lg-4 col-md-6 col-12">
                            <div class="single-product">
                                <div class="product-img">
                                    <a asp-controller="product" asp-action="details" asp-route-id="@product.Id">
                                        <img src="~/product/@photoName" class="img-fluid" />
                                    </a>
                                </div>
                                <div class="product-content">
                                    <h3><a asp-controller="product" asp-action="details" asp-route-id="@product.Id">@productInfo.Name</a></h3>
                                    <div class="product-price">
                                        <span>Rp. @productInfo.Price</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
                @*<div class="row">
                    <div class="col-12">
                        <ul class="pagination">
                            @Html.PagedListPager((IPagedList)ViewBag.Products, page => Url.Action("subproduct", "home", new { page = page }))
                        </ul>
                    </div>
                </div>*@
            </div>
        </div>
    </div>
</section>